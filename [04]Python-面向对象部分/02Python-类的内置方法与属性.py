# -*- coding:utf-8 -*-
# @Desc : 
# @Author : Administrator
# @Date : 2019-07-05 13:16

class Cat:
    """ 这个类的文档"""
    def __init__(self,new_name):
        print("这是对象的初始化方法")
        # self.name = "Tom"  # 在初始化的时候给对象设置一个属性并赋值
        self.name = new_name

    def eat(self):
        print("%s 爱吃鱼"%self.name)

    def __del__(self):
        print("%s去了!!!"% self.name)

    def __str__(self):
        # 必须返回一个字符串
        return "我的小猫[%s]"% self.name

# 使用类名()创建对象的时候,会自动调用初始化方法__init__()
tom = Cat("Tom")
print(tom)
# 这是对象的初始化方法
# 我的小猫[Tom]
# Tom 去了!!!


### 初始化方法: __init__()
## 语法格式:
# class 类名(继承列表):
#     def __init__(self [,形参列表]):
#         语句块
## 说明:
# 1. 初始化方法名必须为__init__ 不可改变
# 2. 初始化方法会在构造函数创建实例后自动调用,且将实例自身通过第一个参数self传入__init__方法
# 3. 构造函数的实参将通过__init__方法的形参列表传入 __init__ 方法中
# 4. 初始化方法内部如果需要返回则只能返回None
## 作用: 对新创建的对象添加实例变量(属性)或相应的资源


### 析构方法: __del__()
## 语法:
# class 类名(继承列表):
#     def __del__(self):
#         语句块
## 说明: 析构方法在对象销毁时被自动调用
## 作用: 清理此对象所占用的资源



### 内置实例属性:
## 属性: __dict__
# 作用: 此属性绑定一个存储此实例自身实例变量(属性)的字典

## 属性: __class__
# 作用: 此属性用来绑定创建此实例的类,可以借助此属性来访问创建此实例的类

## 属性: __mro__
# 作用: 在多继承的情况下,查看类的方法的执行顺序
