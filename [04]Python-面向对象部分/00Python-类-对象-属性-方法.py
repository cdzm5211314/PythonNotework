# -*- coding:utf-8 -*-
# @Desc : 
# @Author : Administrator
# @Date : 2019-07-05 13:27

### 下划线总结说明:
# 1) _xxx "单下划线" 开始的属性/方法叫做保护属性/方法,意思是只有类的对象和子类的对象能访问到这些属性/方法
# 注: 需通过类提供的接口进行访问,不能用 from module import * 导入
# 2) __xxx "双下划线"开始的属性/方法叫做私有属性/方法,意思是只有类自己本身能访问,连子类的对象也不能访问到这个数据
# 3) __xxx__ 系统定义名字,前后均有一个"双下划线",代表Python里特殊方法专用的标识,如 __init__()代表类的构造函数


class Clazz(object):
    number = 1          # 公有类属性
    _number2 = 2        #
    __number3 = 3       # 私有类属性

    # 实例方法
    def __init__(self, name):
        self.name = name    # 对象公有属性
        self._addr = "北京" #
        self.__age = 20     # 对象私有属性 ---> # 私有属性不能再外部直接访问

    def func(self):  # 普通方法
        print("func 普通方法")

    def _func2(self):  #
        print("_func2 方法")

    def __func3(self):  # 私有方法 ---> # 私有方法不能再外部直接调用
        print("_func3 私有方法")

    @property
    def color(self):  # 方法属性
        return "方法属性"

    @classmethod
    def clazzFunc(cls):  # 类方法
        print("clazz 类方法")

    @staticmethod
    def staticFunc():  # 静态方法
        print("staticFunc 静态方法")



# 总结: 类属性(公有属性与私有属性)
#   类名.公有类属性    可以直接通过类对象直接访问类的公有属性
#   对象.公有类属性    可以直接通过实例对象访问类的公有属性(先查找实例属性,没有在查找类的公有属性)
#   类名.私有类属性    不能在类外部通过类对象访问类的私有属性
#   对象.私有类属性    不能在类外部通过实例对象访问类的私有属性
# 注意: 实例对象.类的公有属性 = "修改值" ---> 只是增加了一个与类属性同名的实例属性

# 总结: 对象属性
#   类名.对象属性    类名不能访问对象属性
#   对象.对象属性    对象可以访问对象属性

# 总结: 类方法
#   类名.类方法    类名可以直接调用类方法
#   对象.类方法    对象可以直接调用类方法

# 总结: 对象方法
#   类名.对象方法    类名不能调用对象方法
#   对象.对象方法    对象可以调用对象方法



