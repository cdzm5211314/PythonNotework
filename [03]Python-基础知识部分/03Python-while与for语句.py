# -*- coding:utf-8 -*-
# @Desc : 
# @Author : Administrator
# @Date : 2019-07-02 11:17

# while 语句: 根据一定条件，重复的执行一条语句或多条语句
# 语法:
# while 真值表达式:
#     语句块
# else:
#     语句块

# while 语句语法说明:
#     1. 先执行真值表达式，判断True/False
#     2. 如果为True则执行语句块1,然后跳转到第1步
#     3. 如果为 False则执行else子句部分的语句块2.然后结束此while语句的执行.如果没有else子句，则直接结束此while语句
#     4. else 子句部分可以省略(同if语句类似)
#
# while 注意事项:
#     1. 要控制真值表达式来访问死循环
#     2. 通常用真值表达式内的变量来控制循环条件
#     3. 通常要在循环语句块内改变循环变量来控制循环的次数和变量的走向


# break 语句: 用于循环语句(while,for语句)中，用来终止当前循环语句的执行
# break 语句说明:
    # 1. 当break语句执行后，此循环语句break之后的语句将不再执行
    # 2. break语句通常和if语句组合使用
    # 3. break语句终止循环时，循环语句的else子句的语句将不会执行
    # 4. break语句只能终止当前循环语句的执行，如果有循环嵌套时，不会跳出嵌套的外重循环
    # 5. break 语句只能在循环语句(while或for语句)内部使用


# for 语句: 用来遍历可迭代对象的数据元素
# 可迭代对象包括: 字符串str, 列表list, 元组tuple, 字典dict, 集合set

# for 语句语法:
#     for 变量列表　in 可迭代对象:
#         语句块1
#     else:
#         语句块2

# for 语法说明:
#     1. 可迭代对象每次提供一个元素依次赋值给变量列表中的变量，赋值完毕后执行语句块1,重复执行此步骤，直到可迭代对象不能提供数据为止
#     2. 可迭代对象提供完所有元素后，执行else子句部分的语句块２，然后退出此for语句
#     3. else子句部可以省略（同while语句类似)
#     4. 当在循环内部用break终止循环时，else子句部分语句不会执行


# continue 语句: 用于循环语句(while, for语句)中，不再执行本次循环内continue之后的语句，重新开始一次新的循环
# continue 语句说明:
#     1. 在while语句中，执行continue语句将会直接跳转到while语句的真值表达式处重新判断循环条件
#     2. 在for语句中，执行 continue语句，将会从可迭代对象中取下一个元素，绑定变量后再次进行循环


